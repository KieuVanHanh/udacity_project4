name: Frontend Continuous Integration
on:
  workflow_dispatch:
  push:
    branches: 
      - main
    paths:
      - 'starter/frontend/**'
  pull_request:
    branches: 
      - main
    paths:
      - 'starter/frontend/**'
env:
  # Set Node.js Version
  NODE_VERSION: '18.x'

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/frontend
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Use Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'npm'
          cache-dependency-path: "starter/frontend/package-lock.json"

      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: starter/frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Validate Cache
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          echo "Cache miss, installing dependencies..."
          npm ci

      - name: Lint job
        run: npm run lint
  run-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/frontend
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
  
      - name: Use Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'npm'
          cache-dependency-path: "starter/frontend/package-lock.json"
      
      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: starter/frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Validate Cache
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          echo "Cache miss, installing dependencies..."
          npm ci
      
      - name: test job
        run: |
          npm run test
  build:
    needs: [lint, run-test]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/frontend
    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Use Node.js 
      uses: actions/setup-node@v3
      with:
        node-version: ${{env.NODE_VERSION}}
        cache: 'npm'
        cache-dependency-path: "starter/frontend/package-lock.json"

    - name: Cache node modules
      id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: starter/frontend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Validate Cache
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: |
        echo "Cache miss, installing dependencies..."
        npm ci

    - name: build job
      run: |
        npm ci
        npm run build --if-present
        npm run test

    - name: Build docker image
        run: |
          docker build --build-arg=REACT_APP_MOVIE_API_URL=${{ env.REACT_APP_MOVIE_API_URL }} -t frontend:${GITHUB_SHA} .